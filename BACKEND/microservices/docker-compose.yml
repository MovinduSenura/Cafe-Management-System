version: "3.8"

services:
  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: cafe-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: cafe-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - USER_SERVICE_URL=http://user-service:3001
      - CUSTOMER_SERVICE_URL=http://customer-service:3002
      - MENU_SERVICE_URL=http://menu-service:3003
      - ORDER_SERVICE_URL=http://order-service:3004
      - PAYMENT_SERVICE_URL=http://payment-service:3005
      - INVENTORY_SERVICE_URL=http://inventory-service:3006
      - RESERVATION_SERVICE_URL=http://reservation-service:3007
      - NOTIFICATION_SERVICE_URL=http://notification-service:3008
      - REPORT_SERVICE_URL=http://report-service:3009
    depends_on:
      - redis
      - user-service
      - customer-service
      - menu-service
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # User Service (Authentication)
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: cafe-user-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - LOG_LEVEL=info
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:3001/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Customer Service
  customer-service:
    build:
      context: ./customer-service
      dockerfile: Dockerfile
    container_name: cafe-customer-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - CUSTOMER_DB_URI=${CUSTOMER_DB_URI}
      - MONGODB_URI=${MONGODB_URI}
      - LOG_LEVEL=info
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:3002/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Menu Service
  menu-service:
    build:
      context: ./menu-service
      dockerfile: Dockerfile
    container_name: cafe-menu-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - MENU_DB_URI=${MENU_DB_URI}
      - MONGODB_URI=${MONGODB_URI}
      - LOG_LEVEL=info
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:3003/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: cafe-network
